{% extends "claim-details-tpl.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "../../../../macro/contact-us-for-help.njk" import contactUsForHelp %}
{% from "../../../../macro/csrf.njk" import csrfProtection %}

{% block content %}
  <div class="govuk-width-container">
    <main class="govuk-main-wrapper" role="main">
      {% set errors = form.getAllErrors() %}
      {% set declaredError = form.errorFor('declared') %}
      {% set atLeastOneCourtOrderError = form.errorFor('rows') %}
      {% if errors.length > 0 %}
        {{ govukErrorSummary({
          "titleText": t('There was a problem'),
          "errorList": errors
        }) }}
      {% endif %}
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
          <h1 class="govuk-heading-l">{{ t('Are you paying money as a result of any court orders?') }}</h1>
          <div data-module="moj-add-another">
            <form
              method="POST" novalidate>

              {{ csrfProtection(csrfToken) }}

              {% set courtOrdersHtml %}
                <div
                  class="govuk-form-group {% if atLeastOneCourtOrderError %} govuk-form-group--error {% endif %}">
                  {% if atLeastOneCourtOrderError %}
                    <p class="govuk-error-message">
                      <span class="govuk-visually-hidden">Error:</span> {{ t(atLeastOneCourtOrderError) }}
                    </p>
                  {% endif %}

                  {% for courtOrder in form.model.rows %}
                    {{ courtOrderMacro(loop.index0, courtOrder, form.errorFor) }}
                  {% else %}
                    {% call govukFieldset({ classes: 'moj-add-another__item' }) %}
                      {{ courtOrderMacro(0, '', form.errorFor) }}
                    {% endcall %}
                  {% endfor %}

                  <div class="moj-button-action">
                    {{ govukButton({
                      text: t('Add another court order'),
                      classes: 'govuk-button--secondary moj-add-another__add-button govuk-!-margin-bottom-1',
                      type: 'button'
                    }) }}
                  </div>
                </div>
              {% endset -%}

              {{ govukRadios({
                idPrefix: "declared",
                name: "declared",
                items: [
                  {
                    value: YesNo.YES,
                    text: t('Yes'),
                    checked: form.model.declared === true,
                    conditional: {
                    html: courtOrdersHtml
                  }
                  },
                  {
                    value: YesNo.NO,
                    text: t('No'),
                    checked: form.model.declared === false
                  }
                ],
                errorMessage: {
                  text: declaredError
                } if declaredError
              }) }}

              <div class="govuk-form-group">
                {{ govukButton({
                  text: t("Save and continue")
                }) }}
              </div>

            </form>
          </div>

        </div>
      </div>
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-thirds">
          {{ contactUsForHelp(t) }}
        </div>
      </div>
    </main>
  </div>
{% endblock %}

{% macro courtOrderMacro(courtOrderIndex, courtOrderValue, errorFor) %}
  {% call govukFieldset({
    classes: 'moj-add-another__item govuk-!-margin-bottom-6',
    legend: {
      classes: 'moj-add-another__title govuk-fieldset__legend--m',
      isPageHeading: false
    }
  }) %}

    {{ govukInput({
      id: 'rows[' + courtOrderIndex + '][claimNumber]',
      name: 'rows[' + courtOrderIndex + '][claimNumber]',
      value: courtOrderValue.claimNumber,
      type: 'text',
      classes: 'govuk-!-width-one-third',
      label: {
        text: t('Claim number')
      },
      attributes: {
        'data-name': 'rows[%index%][claimNumber]',
        'data-id': 'rows[%index%][claimNumber]'
      },
      errorMessage: {
        text: t(errorFor('rows['+courtOrderIndex+'][claimNumber]'))
      } if errorFor('rows['+courtOrderIndex+'][claimNumber]')
    }) }}

    {{ govukInput({
      id: 'rows[' + courtOrderIndex + '][amount]',
      name: 'rows[' + courtOrderIndex + '][amount]',
      value: courtOrderValue.amount,
      type: 'number',
      classes: 'govuk-!-width-one-third',
      prefix: {
        text: "£"
      },
      label: {
        text: t('Amount you owe')
      },
      attributes: {
        'data-name': 'rows[%index%][amount]',
        'data-id': 'rows[%index%][amount]'
      },
      errorMessage: {
        text: t(errorFor('rows['+courtOrderIndex+'][amount]'))
      } if errorFor('rows['+courtOrderIndex+'][amount]')
    }) }}
    {{ govukInput({
      id: 'rows[' + courtOrderIndex + '][instalmentAmount]',
      name: 'rows[' + courtOrderIndex + '][instalmentAmount]',
      value: courtOrderValue.instalmentAmount,
      type: 'number',
      classes: 'govuk-!-width-one-third',
      prefix: {
        text: "£"
      },
      label: {
        text: t('Monthly instalment amount')
      },
      attributes: {
        'data-name': 'rows[%index%][instalmentAmount]',
        'data-id': 'rows[%index%][instalmentAmount]'
      },
      errorMessage: {
        text: t(errorFor('rows['+courtOrderIndex+'][instalmentAmount]'))
      } if errorFor('rows['+courtOrderIndex+'][instalmentAmount]')
    }) }}

  {% endcall %}
{% endmacro %}
