{% extends "claim-details-tpl.njk" %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "../../../../../macro/error-summary.njk" import errorSummary %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "../../../../../macro/csrf.njk" import csrfProtection %}
{% from "../../../../../macro/contact-us-for-help.njk" import contactUsForHelp %}
{% from "../../../../../macro/page-title.njk" import setPageTitle %}

{% block pageTitle %}
  {{ setPageTitle('PAGES.SELF_EMPLOYED.PAGE_TITLE') }}
{% endblock %}

{% block content %}
  <div class="govuk-width-container">
    <main class="govuk-main-wrapper" role="main">
      {% set title = t('PAGES.SELF_EMPLOYED.TITLE') %}
      {% if form.hasErrors() %}
        {{ errorSummary(form.getErrors(), t) }}
      {% endif %}
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
          <form method="post" novalidate>
            {{ csrfProtection(csrf) }}
            {% call govukFieldset({
              legend: {
                text: title,
                classes: "govuk-fieldset__legend--l",
                isPageHeading: true
              }
            }) %}
            <div class="govuk-grid-column-one-third govuk-!-padding-0">
              {{ govukInput({
              label: {
                text: t('PAGES.SELF_EMPLOYED.JOB_TITLE'),
                isPageHeading: true
              },
              id: "jobTitle",
              name: "jobTitle",
              type: "text",
              value: form.model.jobTitle,
              autocomplete: "text",
              errorMessage: {
                text: t(form.errorFor('jobTitle'))
              } if form.hasFieldError('jobTitle')
            }) }}
              {{ govukInput({
              label: {
                text: t('PAGES.SELF_EMPLOYED.ANNUAL'),
                isPageHeading: true
              },
              id: "annualTurnover",
              name: "annualTurnover",
              type: "number",
              autocomplete: "number",
              prefix: {
                text: "Â£"
              },
              spellcheck: false,
              value: form.model.getAnnualTurnoverAsString(),
              errorMessage: {
                text: t(form.errorFor('annualTurnover'))
              } if form.hasFieldError('annualTurnover')
            }) }}
            </div>
            {% endcall %}
            <div class="govuk-form-group">
              {{ govukButton({
                text: t('COMMON.BUTTONS.SAVE_AND_CONTINUE')
              }) }}
              {{ contactUsForHelp(t) }}
            </div>
          </form>
        </div>
      </div>
    </main>
  </div>
{% endblock %}
