{% extends "claim-details-tpl.njk" %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "../../macro/csrf.njk" import csrfProtection %}
{% from "../../macro/contact-us-for-help.njk" import contactUsForHelp %}
{% from "../../macro/page-title.njk" import setPageTitle %}
{% from "../../macro/error-summary.njk" import errorSummary %}
{% from "../../macro/their-financial-details.njk" import theirFinancialDetails %}

{% block pageTitle %}
  {{ setPageTitle('PAGES.CCJ_REPAYMENT_PLAN_INSTALMENTS.TITLE') }}
{% endblock %}

{% set nexMonthDate = nextMonth.getDate() + ' ' + (nextMonth.getMonth() + 1) + ' ' + nextMonth.getFullYear() %}
{% set dateHint = t('PAGES.REPAYMENT_PLAN.FOR_EXAMPLE_NEXT_MONTH') + nexMonthDate %}
{% set totalAmount = form.model.totalClaimAmount %}

{% block content %}
  <div class="govuk-width-container">
    <main class="govuk-main-wrapper" role="main">
      {% set errors = form.getAllErrors() %}
      {% if form.hasErrors() %}
        {{ errorSummary(errors,t) }}
      {% endif %}
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
          <h1 class="govuk-heading-l">{{ t('PAGES.CCJ_REPAYMENT_PLAN_INSTALMENTS.TITLE') }}</h1>
          {{ govukInsetText({
              text: t('PAGES.CCJ_REPAYMENT_PLAN_INSTALMENTS.INSET')
          }) }}
          <p class="govuk-body">{{ t('PAGES.CCJ_REPAYMENT_PLAN_INSTALMENTS.TOTAL_CLAIM_AMOUNT', {totalClaimAmount: totalAmount}) }}</p>
        </div>
      </div>
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
          <form method="post" novalidate name="repaymentPlan">
            {{ csrfProtection(csrf) }}
            {% if claim.isBusiness() === false %}
              {% if claim.responseStatus === ClaimResponseStatus.PA_FA_CLAIMANT_REJECT_REPAYMENT_PLAN %}
                {{ theirFinancialDetails(t, 'PAGES.REVIEW_DEFENDANTS_RESPONSE.SEE_FINANCIAL_DETAILS', claim, financialDetails) }}
              {% endif %}
            {% endif %}
            <input type="hidden" class="repayment-amount" value="{{ totalAmount }}"/>
            <p class="govuk-!-margin-0 govuk-body-m"><strong>{{t('PAGES.REPAYMENT_PLAN.REGULAR_PAYMENTS')}}:</strong></p>
            {{ govukInput({
              label: {
                text: t('PAGES.REPAYMENT_PLAN.REGULAR_PAYMENTS_IN_POUNDS'),
                for: "paymentAmount",
                classes: 'govuk-visually-hidden'
              },
              hint: {
                text: t('PAGES.REPAYMENT_PLAN.FOR_EXAMPLE') + '£200'
              },
              classes: "repayment-instalments govuk-!-width-one-half",
              id: "paymentAmount",
              name: "paymentAmount",
              type: "number",
              autocomplete: "number",
              prefix: {
                text: "£"
              },
              spellcheck: false,
              value: form.model.getPaymentAmountAsString(),
              errorMessage: {
                text:t(form.errorFor('paymentAmount'))
              } if form.hasFieldError('paymentAmount')
            }) }}
            {{ govukRadios({
              idPrefix: "repaymentFrequency",
              name: "repaymentFrequency",
              classes: "repayment-frequency",
              fieldset: {
                legend: {
                  text: t("PAGES.REPAYMENT_PLAN.HOW_OFTEN_RECEIVE_PAYMENTS"),
                  isPageHeading: true,
                  classes: "govuk-fieldset__legend--s"
                }
              },
              hint: {
                text: t('PAGES.REPAYMENT_PLAN.HOW_OFTEN_RECEIVE_PAYMENTS_HINT')
              },
              items: [
                {
                  value: TransactionSchedule.WEEK,
                  checked: true if form.model.repaymentFrequency === TransactionSchedule.WEEK,
                  text: t('COMMON.PAYMENT_FREQUENCY.WEEK')
                },
                {
                  value: TransactionSchedule.TWO_WEEKS,
                  checked: true if form.model.repaymentFrequency === TransactionSchedule.TWO_WEEKS,
                  text: t('COMMON.PAYMENT_FREQUENCY.TWO_WEEKS')
                },
                {
                  value: TransactionSchedule.MONTH,
                  checked: true if form.model.repaymentFrequency === TransactionSchedule.MONTH,
                  text: t('COMMON.PAYMENT_FREQUENCY.MONTH')
                }
              ],
              errorMessage: {
                text:t(form.errorFor('repaymentFrequency'))
              } if form.hasFieldError('repaymentFrequency')
            }) }}
            <div>
              <p class="govuk-body">
                <strong>{{ t('PAGES.REPAYMENT_PLAN.LENGTH') }}</strong>
              </p>
              <div class="govuk-body repayment-length">
                <span id="numberOfInstalments">-</span>
                <div class="schedule">
                  <span id="week_schedule">{{ t('COMMON.SCHEDULE.WEEK_LOWER_CASE') }}</span>
                  <span id="weeks_schedule">{{ t('COMMON.SCHEDULE.WEEKS_LOWER_CASE') }}</span>
                  <span id="two-weeks_schedule">{{ t('COMMON.SCHEDULE.TWO_WEEKS') }}</span>
                  <span id="month_schedule">{{ t('COMMON.SCHEDULE.MONTH') }}</span>
                  <span id="months_schedule">{{ t('COMMON.SCHEDULE.MONTHS_LOWER_CASE') }}</span>
                  <span id="two-months_schedule">{{ t('COMMON.SCHEDULE.TWO_MONTHS_LOWER_CASE') }}</span>
                </div>
              </div>
            </div>
            {{ govukDateInput({
              id: "firstRepaymentDate",
              type: "number",
              inputmode: "numeric",
              fieldset: {
                legend: {
                  text: t('PAGES.REPAYMENT_PLAN.DATE_FOR_FIRST_INSTALMENT'),
                  isPageHeading: true,
                  classes: "govuk-fieldset__legend--s"
                }
              },
              hint: {
                text: dateHint
              },
              errorMessage: {
                html: '<p class="govuk-error-message">' + t(form.errorFor('firstRepaymentDate')) + '</p>' +
                '<p class="govuk-error-message">' + t(form.errorFor('day')) + '</p>' +
                '<p class="govuk-error-message">' + t(form.errorFor('month')) + '</p>' +
                '<p class="govuk-error-message">' + t(form.errorFor('year')) + '</p>'
              } if (form.hasFieldError('firstRepaymentDate') or form.hasFieldError('day') or form.hasFieldError('month') or form.hasFieldError('year')),
              items: [
                {
                  label: t('COMMON.DAY'),
                  id: "day",
                  name: "day",
                  classes: "govuk-input--width-2 govuk-input--error" if form.hasFieldError('day') or form.hasFieldError('firstRepaymentDate') else "govuk-input--width-2",
                  autocomplete: "bday-day",
                  value: form.model.getDayAsString(),
                  max: 31
                },
                {
                  label: t('COMMON.MONTH'),
                  id: "month",
                  name: "month",
                  classes: "govuk-input--width-2 govuk-input--error" if form.hasFieldError('month') or form.hasFieldError('firstRepaymentDate') else "govuk-input--width-2",
                  autocomplete: "bday-month",
                  value: form.model.getMonthAsString(),
                  max: 12
                },
                {
                  label: t('COMMON.YEAR'),
                  id: "year",
                  name: "year",
                  classes: "govuk-input--width-4 govuk-input--error" if form.hasFieldError('year') or form.hasFieldError('firstRepaymentDate') else "govuk-input--width-4",
                  autocomplete: "bday-year",
                  value: form.model.getYearAsString(),
                  max: 9999
                }
              ]
            }) }}
            <div class="govuk-form-group">
            {{ govukButton({
              text: t('COMMON.BUTTONS.SAVE_AND_CONTINUE')
            }) }}
            </div>
          </form>
        </div>
      </div>
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-thirds">
          {{ contactUsForHelp(t) }}
        </div>
      </div>
    </main>
  </div>
{% endblock %}
