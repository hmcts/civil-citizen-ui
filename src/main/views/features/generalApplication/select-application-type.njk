{% extends "claim-details-tpl.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "../../macro/contact-us-for-help.njk" import contactUsForHelp %}
{% from "../../macro/csrf.njk" import csrfProtection %}
{% from "../../macro/page-title.njk" import setPageTitle %}
{% from "../../macro/error-summary.njk" import errorSummary %}

{% block pageTitle %}
  {{ setPageTitle(t, 'PAGES.GENERAL_APPLICATION.SELECT_TYPE.TITLE') }}
{% endblock %}

{% block content %}
  <div class="govuk-width-container">
    <main class="govuk-main-wrapper" role="main">
      {% if form.hasErrors() %}
        {{ errorSummary(form.getErrors(), t) }}
      {% endif %}
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
          <h1 class="govuk-heading-l">{{ t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.CAPTION') }}</h1>
          <h1 class="govuk-heading-l">{{ t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.TITLE') }}</h1>
          <form method="post" novalidate>
            {{ csrfProtection(csrf) }}
            {% set typeError = form.errorFor('type') %}
            <div class="govuk-form-group">
              {{ govukRadios({
                idPrefix: "applicationType",
                name: "applicationType",
                items: [
                  {
                    value: ApplicationType.ASK_CANCEL_JUDGMENT,
                    html: '<strong>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_CANCEL_JUDGMENT') + '</strong>',
                    checked: form.model.option === ApplicationType.ASK_CANCEL_JUDGMENT,
                    hint: {
                      text: t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_CANCEL_JUDGMENT_DESCRIPTION')
                    }
                  },
                  {
                    value: ApplicationType.ASK_VARY_JUDGMENT,
                    html: '<strong>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_VARY_JUDGMENT') + '</strong>',
                    checked: form.model.option === ApplicationType.ASK_VARY_JUDGMENT,
                    hint: {
                      text: t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_VARY_JUDGMENT_DESCRIPTION')
                    }
                  },
                  {
                    value: ApplicationType.ASK_RECONSIDER,
                    html: '<strong>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_RECONSIDER') + '</strong>',
                    checked: form.model.option === ApplicationType.ASK_RECONSIDER,
                    hint: {
                      text: t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_RECONSIDER_DESCRIPTION')
                    }
                  },
                  {
                    value: ApplicationType.ASK_CHANGE_HEARING,
                    html: '<strong>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_CHANGE_HEARING') + '</strong>',
                    checked: form.model.option === ApplicationType.ASK_CHANGE_HEARING,
                    hint: {
                      text: t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_CHANGE_HEARING_DESCRIPTION')
                    }
                  },
                  {
                    value: ApplicationType.ASK_MORE_TIME,
                    html: '<strong>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_MORE_TIME') + '</strong>',
                    checked: form.model.option === ApplicationType.ASK_MORE_TIME,
                    hint: {
                      text: t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_MORE_TIME_DESCRIPTION_1') + '<br>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_MORE_TIME_DESCRIPTION_2')
                    }
                  },
                  {
                    value: ApplicationType.ASK_RELIEF_PENALTY,
                    html: '<strong>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_RELIEF_PENALTY') + '</strong>',
                    checked: form.model.option === ApplicationType.ASK_RELIEF_PENALTY,
                    hint: {
                      text: t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.ASK_RELIEF_PENALTY_DESCRIPTION')
                    }
                  },
                  {
                    value: ApplicationType.OTHER,
                    html: '<strong>' + t('PAGES.GENERAL_APPLICATION.SELECT_TYPE.OTHER') + '</strong>',
                    checked: form.model.option === ApplicationType.OTHER,
                    formGroup: {
                      afterInputs: {
                        html: '<p>test</p>'
                      }
                    }
                  }
                ],
                errorMessage: {
                  text: t(typeError)
                } if typeError
              }) }}
            </div>
            <div class="govuk-form-group">
              {{ govukButton({
                text: t('COMMON.BUTTONS.SAVE_AND_CONTINUE')
              }) }}
            </div>
          </form>
        </div>
      </div>
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-thirds">
          {{ contactUsForHelp(t) }}
        </div>
      </div>
    </main>
  </div>
{% endblock %}
