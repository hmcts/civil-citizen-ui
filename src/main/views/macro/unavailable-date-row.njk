{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% macro unavailableDateRow(unavailableDate, legend, index, errorFor, t, removeButton, today, isCarm) %}

  {% set exampleDate = today.getDate() + ' ' + (today.getMonth() + 1)+ ' ' + (today.getFullYear() + 1) %}

  {% set singleDateHTML %}
    {% set singleDateError = '<p class="govuk-error-message">' + t(errorFor('items[' +index+ '][from]')) + '</p>' +
      '<p class="govuk-error-message">' + t(errorFor('items[' +index+ '][startDay]')) + '</p>' +
      '<p class="govuk-error-message">' + t(errorFor('items[' +index+ '][startMonth]')) + '</p>' +
      '<p class="govuk-error-message">' + t(errorFor('items[' +index+ '][startYear]')) + '</p>' %}
  {{ govukDateInput({
    id: 'items[' + index + '][from]' if unavailableDate.type === UnavailableDateType.SINGLE_DATE else 'items[' + index + '][from]-single',
    type: 'number',
    inputmode: 'numeric',
    hint: {
      text: t('COMMON.DATE_EXAMPLE', { date: exampleDate })
    },
    errorMessage: {
      html: singleDateError
    } if (errorFor('items['+index+'][from]') or errorFor('items['+index+'][startDay]') or errorFor('items['+index+'][startMonth]') or errorFor('items['+index+'][startYear]')),
    items: [
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items['+index+'][startDay]') or errorFor('items['+index+'][from]')) else "govuk-input--width-4",
        id: 'items[' +index+ '][startDay]' if unavailableDate.type === UnavailableDateType.SINGLE_DATE else 'items[' +index+ '][startDay]-single',
        name: 'items[' +index+ '][single][start][day]',
        label: t('COMMON.DAY'),
        value: unavailableDate.startDay if unavailableDate.type === UnavailableDateType.SINGLE_DATE,
        max: 31
      },
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items[' +index+ '][startMonth]') or errorFor('items[' +index+ '][from]')) else "govuk-input--width-4",
        id: 'items[' +index+ '][startMonth]' if unavailableDate.type === UnavailableDateType.SINGLE_DATE else 'items[' +index+ '][startMonth]-single',
        name: 'items[' +index+ '][single][start][month]',
        label: t('COMMON.MONTH'),
        value: unavailableDate.startMonth if unavailableDate.type === UnavailableDateType.SINGLE_DATE,
        max: 12
      },
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items[' +index+ '][startYear]') or errorFor('items[' +index+ '][from]')) else "govuk-input--width-4",
        id: 'items[' +index+ '][startYear]' if unavailableDate.type === UnavailableDateType.SINGLE_DATE else 'items[' +index+ '][startYear]-single',
        name: 'items[' +index+ '][single][start][year]',
        label: t('COMMON.YEAR'),
        value: unavailableDate.startYear if unavailableDate.type === UnavailableDateType.SINGLE_DATE,
        max: 9999
      }
    ]
  }) }}
{% endset -%}

{% set longerPeriodHTML %}

  <div>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][from]')) }} </p>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][startDay]')) }}</p>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][startMonth]')) }}</p>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][startYear]')) }}</p>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][until]')) }}</p>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][endDay]')) }}</p>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][endMonth]')) }}</p>
    <p class="govuk-error-message">{{ t(errorFor('items['+index+'][endYear]')) }}</p>
  </div>
  {{ govukDateInput({
    id: 'items[' +index+ '][from]',
    type: "number",
    inputmode: "numeric",
    fieldset: {
      legend: {
        text: t('PAGES.UNAVAILABLE_DATES_FOR_HEARING.FROM')
      }
    },
    hint: {
      text: t('COMMON.DATE_EXAMPLE', { date: exampleDate })
    },
    items: [
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items['+index+'][startDay]') or errorFor('items['+index+'][from]') or (not unavailableDate.from and errorFor('items['+index+'][until]'))) else "govuk-input--width-4",
        id: 'items[' + index + '][startDay]' ,
        name: 'items[' + index + '][period][start][day]',
        label: t('COMMON.DAY'),
        value: unavailableDate.startDay if unavailableDate.type === UnavailableDateType.LONGER_PERIOD,
        max: 31
      },
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items['+index+'][startMonth]') or errorFor('items['+index+'][from]') or (not unavailableDate.from and errorFor('items['+index+'][until]'))) else "govuk-input--width-4",
        id: 'items[' + index + '][startMonth]',
        name: 'items[' + index + '][period][start][month]',
        label: t('COMMON.MONTH'),
        value: unavailableDate.startMonth if unavailableDate.type === UnavailableDateType.LONGER_PERIOD,
        max: 12
      },
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items['+index+'][startYear]') or errorFor('items['+index+'][from]') or (not unavailableDate.from and errorFor('items['+index+'][until]'))) else "govuk-input--width-4",
        id: 'items[' + index + '][startYear]',
        name: 'items[' + index + '][period][start][year]',
        label: t('COMMON.YEAR'),
        value: unavailableDate.startYear if unavailableDate.type === UnavailableDateType.LONGER_PERIOD,
        max: 9999
      }
    ]
  }) }}

  {{ govukDateInput({
    id: 'items[' + index + '][until]',
    type: "number",
    inputmode: "numeric",
    fieldset: {
      legend: {
        text: t('PAGES.UNAVAILABLE_DATES_FOR_HEARING.TO')
      }
    },
    hint: {
      text: t('COMMON.DATE_EXAMPLE', { date: exampleDate })
    },
    items: [
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items['+index+'][endDay]') or errorFor('items['+index+'][until]')) else "govuk-input--width-4",
        id: 'items[' + index + '][endDay]',
        name: 'items[' + index + '][period][end][day]',
        label: t('COMMON.DAY'),
        value: unavailableDate.endDay,
        max: 31
      },
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items['+index+'][endMonth]') or errorFor('items['+index+'][until]')) else "govuk-input--width-4",
        id: 'items[' + index + '][endMonth]',
        name: 'items[' + index + '][period][end][month]',
        label: t('COMMON.MONTH'),
        value: unavailableDate.endMonth,
        max: 12
      },
      {
        classes: "govuk-input--width-4 govuk-input--error" if (errorFor('items['+index+'][endYear]') or errorFor('items['+index+'][until]')) else "govuk-input--width-4",
        id: 'items[' + index + '][endYear]',
        name: 'items[' + index + '][period][end][year]',
        label: t('COMMON.YEAR'),
        value: unavailableDate.endYear,
        max: 9999
      }
    ]
  }) }}
{% endset -%}

  <div class="row-container">
    <div class="multiple-row">
      <div id='items[{{index}}][type]'>
        {% set typeError = errorFor('items['+ index+ '][type]') %}
        {{ govukRadios({
          id: 'items-' +index+ '-type',
          name: 'items[' +index+ '][type]',
          fieldset: {
            legend: {
              text: t(legend),
              classes: "govuk-fieldset__legend--s"
            }
          } if legend is defined,
          items: [
                  {
                    id: 'items-' +index+ '-single-date',
                    value: UnavailableDateType.SINGLE_DATE,
                    html: t('PAGES.UNAVAILABLE_DATES_FOR_HEARING.SINGLE_DATE'),
                    checked: unavailableDate.type === UnavailableDateType.SINGLE_DATE,
                    conditional: {
                      html: singleDateHTML
                    }
                  },
                  {
                    id: 'items-' +index+ '-longer-period',
                    value: UnavailableDateType.LONGER_PERIOD,
                    html:  t('PAGES.UNAVAILABLE_DATES_FOR_HEARING.LONGER_PERIOD'),
                    checked: unavailableDate.type === UnavailableDateType.LONGER_PERIOD,
                    conditional: {
                      html: longerPeriodHTML
                    }
                  }
                ],
          errorMessage: {
            text: t(typeError)
          } if typeError
        }) }}
      </div>

      {% if removeButton %}
        {% if removeButton.hidden %}
          {{ govukButton({
            text: t('COMMON.REMOVE_CARM') if isCarm else t('COMMON.REMOVE') ,
            classes: "govuk-button--secondary remove-row govuk-visually-hidden",
            type: "button" if not removeButton.noJs
          }) }}
        {% else %}
          {{ govukButton({
            text: t('COMMON.REMOVE_CARM') if isCarm else t('COMMON.REMOVE') ,
            classes: "govuk-button--secondary remove-row",
            name: 'action',
            value: 'remove-unavailableDates' + index,
            type: "button" if not removeButton.noJs
          }) }}
        {% endif %}
      {% endif %}
    </div>
  </div>

{% endmacro %}
