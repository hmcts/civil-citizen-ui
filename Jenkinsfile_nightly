#!groovy
properties([
    // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
    pipelineTriggers([cron('H 8 * * 1-5')]),
    parameters([
        string(name: 'TEST_URL', defaultValue: 'https://civil-citizen-ui.aat.platform.hmcts.net', description: 'The URL you want to run tests against'),
    ])
])

@Library("Infrastructure")
import uk.gov.hmcts.contino.AppPipelineConfig
import uk.gov.hmcts.contino.GithubAPI

def type = "nodejs"
def product = "civil"
def component = "citizen-ui"
def camundaBranch = "master"
def dmnBranch = "master"
def waStandaloneBranch = "master"
def ccdBranch = "master"
AppPipelineConfig pipelineConf

static Map<String, Object> secret(String secretName, String envVariable) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   envVariable: envVariable
  ]
}

def secrets = [
  's2s-${env}': [
    secret('microservicekey-ccd-gw', 'CCD_API_GATEWAY_S2S_SECRET'),
    secret('microservicekey-ccd-data', 'CCD_DATA_STORE_S2S_SECRET'),
    secret('microservicekey-ccd-definition', 'CCD_DEFINITION_STORE_S2S_SECRET')
  ],
  'ccd-${env}': [
    secret('ccd-api-gateway-oauth2-client-secret', 'CCD_API_GATEWAY_IDAM_CLIENT_SECRET'),
    secret('postcode-info-address-lookup-token', 'ADDRESS_LOOKUP_TOKEN'),
    secret('ccd-admin-web-oauth2-client-secret', 'ADMIN_WEB_IDAM_SECRET'),
    secret('idam-data-store-client-secret','IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET'),
    secret('idam-data-store-system-user-username','IDAM_DATA_STORE_SYSTEM_USER_USERNAME'),
    secret('idam-data-store-system-user-password','IDAM_DATA_STORE_SYSTEM_USER_PASSWORD')
  ],
  'civil-${env}': [
    secret('microservicekey-civil-service', 'S2S_SECRET'),
    secret('ccd-importer-username', 'CCD_CONFIGURER_IMPORTER_USERNAME'),
    secret('ccd-importer-password', 'CCD_CONFIGURER_IMPORTER_PASSWORD'),
    secret('postgres-user', 'POSTGRES_USER'),
    secret('postgres-password', 'POSTGRES_PASSWORD'),
    secret('ordnance-survey-api-key', 'ORDNANCE_SURVEY_API_KEY'),
    secret('citizen-ui-test-username', 'CITIZEN_USERNAME'),
    secret('citizen-ui-test-password', 'CITIZEN_PASSWORD'),
    secret('civil-judge-password', 'JUDGE_PASSWORD')
  ]
]

def setUrls(suffix){
  env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
  env.SERVICE_AUTH_PROVIDER_API_BASE_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  if("${suffix}" == 'aat') {
    env.CCD_DATA_STORE_URL = "http://ccd-data-store-api-${suffix}.service.core-compute-aat.internal"
    env.URL="https://manage-case.aat.platform.hmcts.net"
    env.TEST_URL="https://civil-citizen-ui-staging.aat.platform.hmcts.net"
    env.CIVIL_SERVICE_URL="http://civil-service-aat.service.core-compute-aat.internal"

  } else {
    env.CCD_DATA_STORE_URL = "https://ccd-data-store-api-civil-citizen-ui-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    env.URL="https://xui-civil-citizen-ui-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    env.TEST_URL="https://civil-citizen-ui-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    env.CIVIL_SERVICE_URL="https://civil-citizen-ui-pr-${CHANGE_ID}-civil-service.preview.platform.hmcts.net"

  }
  env.DM_STORE_URL = "http://dm-store-aat.service.core-compute-aat.internal"
}

withNightlyPipeline(type, product, component) {
  env.TEST_URL = params.TEST_URL
  env.RUNNING_ENV = params.ENVIRONMENT
  setUrls("aat");
  loadVaultSecrets(secrets)
  enableFullFunctionalTest()
  enableCrossBrowserTest()


  afterAlways('fullFunctionalTest') {

          steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'

          publishHTML target: [
                  allowMissing : true,
                  alwaysLinkToLastBuild: true,
                  keepAll : true,
                  reportDir : "functional-output/",
                  reportFiles : "functionalTests.html",
                  reportName : "Civil-Citizen-UI Functional tests result"
          ]
      }
  //enablePactAs([
    //AppPipelineDsl.PactRoles.CONSUMER
 // ])
}
